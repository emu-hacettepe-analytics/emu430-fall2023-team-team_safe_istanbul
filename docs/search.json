[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team Safe İstanbul",
    "section": "",
    "text": "This is our project webpage.\nPlease stay tuned to follow our project activities.\n\nTeam Members\n\nÖmer Faruk Çiftçi\nDoğa Yağmur Deniz\nMuhammed Emre Erkan\nCemil Neşe\nAhmet Taha Karakaya\n\n\n\nProject Topic\nWe will utilize three datasets provided by the Istanbul Metropolitan Municipality.\nThe first dataset, titled “Earthquake Scenario Analysis Results”, contains the outcomes of analyses conducted based on a 7.5 Mw nighttime earthquake scenario.\nThe second dataset, “Neighborhood-Based Building Numbers in 2017”, comprises information on the number of buildings in Istanbul’s neighborhoods. These buildings are categorized by their construction year and the number of floors.\nThe third dataset is “Municipality Population in 2019”, contains population of Istanbul by districts in 2019.\nOur objective is to compile a comprehensive report and identify the districts in Istanbul that are most susceptible to potential earthquakes. We aim to create an ordered priority list for neighborhoods and develop a risk map for Istanbul, taking geographical coordinates into account.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Team Safe Istanbul",
    "section": "",
    "text": "Three CSV files existed, and they were combined based on the id numbers—that is, the “ilce_adi” column.\nThe previously stated preparation code was utilized in this procedure to deal with data imperfections, particularly with regard to the unstable letters used in the “ilce_adi” column\n\n\nCode\n    library(dplyr)\n    library(readr)\n    library(knitr)\n    library(ggplot2)\n    library(leaflet)\n    library(readxl)\n    library(gridExtra)\n    \n    deprem_analiz &lt;- read.csv(\"Deprem_senaryosu_analiz_sonuçlar.csv\")\n    deprem_analiz$ilce_adi &lt;- gsub(\"Ý\", \"İ\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Ð\", \"Ğ\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n    \n    deprem_analiz &lt;- data.frame(lapply(deprem_analiz, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))\n    \n    nufus &lt;- read_excel(\"belediye_nufuslar_2019.xlsx\")\n    nufus &lt;- data.frame(lapply(nufus, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))\n    nufus$Belediyeler &lt;- gsub(\"belediyesi\", \"\", nufus$Belediyeler)\n   \n\n    istanbul_coordinates &lt;- read.csv(\"istanbul_koordinatlar.csv\")\n    istanbul_coordinates &lt;- data.frame(lapply(istanbul_coordinates, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))    \n    \n\nistanbul_df &lt;- data.frame(read_excel(\"istanbul_df.xlsx\"))\nistanbul_df &lt;- cbind(istanbul_df, nufus)\nistanbul_df &lt;- istanbul_df %&gt;% \n  select(-Belediyeler) %&gt;% \n  select(ilce_adi, X2019.yılı.nüfusları, cok_agir_hasarli_bina_sayisi:last_col())\n\n    \n    colnames(deprem_analiz)[1:4] &lt;- c(\"id\", \"ilce_adi\", \"mahalle_adi\", \"mahalle_kodu\")\n    district_sum &lt;- deprem_analiz %&gt;% group_by(ilce_adi) %&gt;% summarise(\n                                                                  total_cok_agir_hasarli = sum(cok_agir_hasarli_bina_sayisi),\n                                                                  total_agir_hasarli = sum(agir_hasarli_bina_sayisi),\n                                                                  total_orta_hasarli = sum(orta_hasarli_bina_sayisi),\n                                                                  total_hafif_hasarli = sum(hafif_hasarli_bina_sayisi),\n                                                                  total_can_kaybi = sum(can_kaybi_sayisi),\n                                                                  total_agir_yarali = sum(agir_yarali_sayisi),\n                                                                  total_hafif_yarali = sum(hafif_yarali_sayisi),\n                                                                  .groups = 'drop')\n    \ndistrict_sum &lt;- data.frame(district_sum)\n\n    district_avg &lt;- deprem_analiz %&gt;% group_by(ilce_adi) %&gt;% summarise(\n                                                                  avg_cok_agir_hasarli = mean(cok_agir_hasarli_bina_sayisi),\n                                                                  avg_agir_hasarli = mean(agir_hasarli_bina_sayisi),\n                                                                  avg_orta_hasarli = mean(orta_hasarli_bina_sayisi),\n                                                                  avg_hafif_hasarli = mean(hafif_hasarli_bina_sayisi),\n                                                                  avg_can_kaybi = mean(can_kaybi_sayisi),\n                                                                  avg_agir_yarali = mean(agir_yarali_sayisi),\n                                                                  avg_hafif_yarali = mean(hafif_yarali_sayisi),\n                                                                 .groups = 'drop')\n    district_avg$ilce_adi &lt;- factor(district_avg$ilce_adi, levels = unique(district_avg$ilce_adi))\n    \n    kable(head(district_avg, 10), caption=\"Data\")\n\n\n\nData\n\n\n\n\n\n\n\n\n\n\n\n\nilce_adi\navg_cok_agir_hasarli\navg_agir_hasarli\navg_orta_hasarli\navg_hafif_hasarli\navg_can_kaybi\navg_agir_yarali\navg_hafif_yarali\n\n\n\n\nadalar\n82.600000\n148.600000\n378.80000\n368.4000\n15.2000000\n12.2000000\n75.600000\n\n\narnavutköy\n1.078947\n6.394737\n44.84211\n130.2632\n0.0000000\n0.0000000\n4.710526\n\n\nataşehir\n7.235294\n27.705882\n162.11765\n401.9412\n5.2352941\n2.7647059\n44.411765\n\n\navcilar\n23.300000\n126.100000\n554.50000\n928.5000\n46.5000000\n23.9000000\n279.900000\n\n\nbahçelievler\n72.363636\n135.454545\n515.27273\n880.5455\n148.4545455\n79.9090909\n690.818182\n\n\nbakirköy\n52.133333\n87.066667\n226.26667\n262.6000\n69.7333333\n38.7333333\n307.333333\n\n\nbayrampaşa\n55.818182\n107.454545\n369.00000\n674.0909\n47.2727273\n30.9090909\n229.909091\n\n\nbağcilar\n36.181818\n82.954545\n363.68182\n699.8636\n53.5909091\n29.6363636\n266.772727\n\n\nbaşakşehir\n11.500000\n57.500000\n297.70000\n624.3000\n7.1000000\n4.5000000\n67.000000\n\n\nbeykoz\n2.511111\n9.844444\n61.24444\n163.4667\n0.5555556\n0.3555556\n6.311111\n\n\n\n\n\n\n\nCode\n    building_avg_line &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_line(aes(y = avg_cok_agir_hasarli, group = 1, color = \"Çok Ağır Hasarlı\")) +\n                geom_line(aes(y = avg_agir_hasarli, group = 1, color = \"Ağır Hasarlı\")) +\n                geom_line(aes(y = avg_orta_hasarli, group = 1, color = \"Orta Hasarlı\")) +\n                geom_line(aes(y = avg_hafif_hasarli, group = 1, color = \"Hafif Hasarlı\")) +\n                ylab(\"Ortalama Bina Sayısı\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar (Line Chart)\") +\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n                scale_color_manual(values = c(\"Çok Ağır Hasarlı\" = \"red\", \"Ağır Hasarlı\" = \"orange\", \n                                              \"Orta Hasarlı\" = \"blue\", \"Hafif Hasarlı\" = \"black\"))\n  \n    building_avg_bar &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_bar(aes(y = avg_hafif_hasarli), fill = \"black\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_orta_hasarli), fill = \"blue\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_agir_hasarli), fill = \"orange\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_cok_agir_hasarli), fill = \"red\", position = \"dodge\", stat = \"identity\") +\n                ylab(\"Ortalama Bina Sayısı\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar\")+\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n    avg_health &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_line(aes(y = avg_can_kaybi, group = 1, color = \"Can Kaybı\")) +\n                geom_line(aes(y = avg_agir_yarali, group = 1, color = \"Ağır Yaralı\")) +\n                geom_line(aes(y = avg_hafif_yarali, group = 1, color = \"Hafif Yaralı\")) +\n                ylab(\"Yaralanma ve Can Kaybi\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar (Line Chart)\") +\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n                scale_color_manual(values = c(\"Can Kaybı\" = \"black\", \"Ağır Yaralı\" = \"red\", \n                                              \"Hafif Yaralı\" = \"blue\"))\n\n\n\n\n\n\n\n\n\nCode\navg_health\n\n\n\n\n\n\nAbove we are able to see how many people would die or get injured in each district when the disaster comes. Focus on the districts that have the pick values. Do they get the highest value because they are really dangerous, or is it just because they have large population? In the following graphs we will also be focusing on the population.\n\n\n\n\n\n\nCode\n  building_avg_line\n\n\n\n\n\n\nThis plot shows us average number of buildings and classification of damaged buildings for each district. It looks similar to previous plot. So, there might be a correlation between deaths and damaged building number.\nLater you will also see this correlation levels.\n\n\n\n\n\n\nCode\n    danger_level &lt;- as.numeric(istanbul_df$can_kaybi_sayisi/istanbul_df$X2019.yılı.nüfusları * 1000)\n    istanbul_coordinates$danger_level &lt;- as.numeric(format(danger_level, scientific = FALSE))\n    istanbul_coordinates &lt;- istanbul_coordinates[order(istanbul_coordinates$danger_level, decreasing = TRUE),]\n    \n    istanbul_coordinates$color &lt;- ifelse(istanbul_coordinates$danger_level &gt; 2, \"red\",\n                                         ifelse(istanbul_coordinates$danger_level &gt; 0.75, \"blue\", \"green\"))\n    istanbul_coordinates$danger_level &lt;- format(istanbul_coordinates$danger_level, scientific = FALSE)\n    \n    kable(head(istanbul_coordinates, 10), caption = \"istanbul something.\")\n\n\n\nistanbul something.\n\n\n\nilceler\nlatitude\nlongitude\ndanger_level\ncolor\n\n\n\n\n1\nadalar\n40.86780\n29.13310\n4.987531172\nred\n\n\n7\nbakırköy\n40.98064\n28.86287\n4.562923412\nred\n\n\n20\nfatih\n41.01446\n28.95455\n3.349206707\nred\n\n\n6\nbahçelievler\n41.00029\n28.86375\n2.672409702\nred\n\n\n22\ngüngören\n41.01981\n28.87484\n2.605021403\nred\n\n\n39\nzeytinburnu\n41.00562\n28.90820\n2.275405860\nred\n\n\n26\nküçükçekmece\n40.99600\n28.77480\n1.910897920\nblue\n\n\n9\nbayrampaşa\n41.05125\n28.89847\n1.892732997\nblue\n\n\n5\nbağcılar\n41.04473\n28.83371\n1.582284852\nblue\n\n\n31\nsilivri\n41.07390\n28.24640\n1.538788072\nblue\n\n\n\n\n\n\nHere, we are able to see the danger zones which are determined by the ratio death/population for each district. Also, each district is assigned one of the following classification if they fall into related threshold values. High Dangerous colored by red, Medium Dangerous colored by blue and Least Dangerous colored by green.\n\n\n\n\n\n\nCode\n    istanbul_df %&gt;%\n  select(ilce_adi, X2019.yılı.nüfusları, can_kaybi_sayisi) %&gt;%\n  ggplot(aes(x = ilce_adi, y = can_kaybi_sayisi)) +\n  geom_point(aes(size = X2019.yılı.nüfusları, color = cut(((can_kaybi_sayisi / X2019.yılı.nüfusları) * 1000), \n                                                          breaks = c(0, 0.7, 2, 5), \n                                                          labels = c(\"Least Dangerous\", \"Medium Dangerous\", \"High Dangerous\")))) +\n  scale_color_manual(values = c(\"High Dangerous\" = \"red\", \"Medium Dangerous\" = \"blue\", \"Least Dangerous\" = \"green\"))+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = \"none\") +\n  xlab(\"District\") +\n  ylab(\"Death\") +\n  scale_y_continuous(limits = c(0, max(istanbul_df$can_kaybi_sayisi) * 1.1)) +\n  scale_size_continuous(range=c(2,8))\n\n\n\n\n\n\nArea of the points show us the population size of the district and colors are the danger levels of each district based on the threshold levels determined.\nSo, here instead of only taking deaths into account, we are able to see relation of death with population. If deaths are high even if population is relatively small than others, we can say that this district is high dangerous zone. If the population is large, and deaths are relatively small, we can assume that this zone is safer than others. Finally, this relations are differs by colors.\n\n\n\n\n\n\nCode\n    harita &lt;- leaflet(istanbul_coordinates) %&gt;%\n      addTiles() %&gt;%\n      addCircleMarkers(\n        lng = ~longitude,\n        lat = ~latitude,\n        radius = istanbul_df$X2019.yılı.nüfusları/50000,\n        color = ~color,\n        fillOpacity = 0.65,\n        popup = ~paste(ilceler, \": \", danger_level)\n      )\n\n    harita\n\n\n\n\n\n\n\nNow, you can see what we have done so far on the real map. Focus on colors and size of the nodes. Here we can see that south part of the İstanbul is going to get the highest damage. Hence, we do not recommend you to be in İstanbul unless there is an urgency. And if you do, stay away from the south and try to be around the green nodes.\n\n\n\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nplot1 &lt;- ggplot(istanbul_df, aes(x = cok_agir_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(cok_agir_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, cok_agir_hasarli_bina_sayisi)), \n            hjust = 0, vjust = -2.5, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Severely Damaged Buildings\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot2 &lt;- ggplot(istanbul_df, aes(x = agir_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(agir_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, agir_hasarli_bina_sayisi)), \n            hjust = 0, vjust = -1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Heavy Damaged Building\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot3 &lt;- ggplot(istanbul_df, aes(x = orta_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(orta_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, orta_hasarli_bina_sayisi)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Moderately Damaged Building\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot4 &lt;- ggplot(istanbul_df, aes(x = hafif_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"purple\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"purple\") +\n  geom_text(aes(x = min(hafif_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, hafif_hasarli_bina_sayisi)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Slightly Damaged Buildings\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(plot1, plot2, plot3, plot4,ncol=2)\n\n\n\n\n\n\nWe also mentioned that average health and average building plots look similar. Nearly around each district we see the pick values. So, we decided to look for the correlation levels of these two variables.\nHere our dependent variable is deaths and independent variables are types of damaged buildings. Correlation levels can also been. Here we can understand the relation between damaged building and deaths.\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nbina_yası_plot1 &lt;- ggplot(istanbul_df, aes(x = once_1980)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(once_1980), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, once_1980)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings Before 1980\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nbina_yası_plot2 &lt;- ggplot(istanbul_df, aes(x = ara_1980_2000)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(ara_1980_2000), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_1980_2000)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings Between 1980-2000\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nbina_yası_plot3 &lt;- ggplot(istanbul_df, aes(x = sonra_2000)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(sonra_2000), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, sonra_2000)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings After 2000\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(bina_yası_plot1, bina_yası_plot2, bina_yası_plot3, ncol = 2)\n\n\n\n\n\n\nIn the above plots we are able to see correlations between ages of buildings and loss of life.\nRecognize that buildings constructed before 1980 have the highest correlation level. That means, old constructions have bigger impact on the loss of lives. When constructions get newer correlation levels decreasing. Hence, we can understand that latest constructions are safer than the previous ones.\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nkat_sayisi_plot1 &lt;- ggplot(istanbul_df, aes(x = ara_1_4_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(ara_1_4_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_1_4_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 1 to 4 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nkat_sayisi_plot2 &lt;- ggplot(istanbul_df, aes(x = ara_5_9_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(ara_5_9_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_5_9_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 5 to 9 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nkat_sayisi_plot3 &lt;- ggplot(istanbul_df, aes(x = ara_9_19_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(ara_9_19_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_9_19_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 9 to 19 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(kat_sayisi_plot1, kat_sayisi_plot2, kat_sayisi_plot3, ncol = 2)\n\n\n\n\n\n\nWe also applied same approach to building storeys.\nHere we understand that buildings with 1 to 4 storeys are much safer than the buildings with 5 to 9 storeys since they have negative correlation with loss of life.\nAlso, when we look at the correlation plot for buildings with 9 and above storeys, they also look safe. However, this result might be biased due to lack of information on these buildings.\n\n\n\n\n\n\n\n\nFinally, we put our data into regression model to see which variable have importance on loss of live. As you guess, our dependent variable is loss of life. All other variables such as storey informations, age information etc. are our independent variables.\nThe model itself returns us which of the variables are more significant on the dependent varaibles. Model indicates these variables with *** at the end of the row. These are significant according to model because their p values are less than 0.05.\nEstimate values are describe how much dependent variable change when 1 unit increase occur on related independent variables.\nFor instance, if severely damaged building increases by one, about 43 more people would also die. Interestengly, waste water pipe damages are also significant for the model and influence the loss of life. 1 unit of pipe damage increases the number of people died by 6.\n\n\n\nCode\ndependent_variable &lt;- reg_df$can_kaybi_sayisi\nindependent_variables &lt;- reg_df[, c(\n  \"cok_agir_hasarli_bina_sayisi\",\n  \"agir_hasarli_bina_sayisi\",\n  \"orta_hasarli_bina_sayisi\",\n  \"hafif_hasarli_bina_sayisi\",\n  \"dogalgaz_boru_hasari\",\n  \"icme_suyu_boru_hasari\",\n  \"atik_su_boru_hasari\",\n  \"once_1980\",\n  \"ara_1980_2000\",\n  \"sonra_2000\",\n  \"ara_1_4_kat\",\n  \"ara_5_9_kat\",\n  \"ara_9_19_kat\"\n)]\n\nstandardize &lt;- function(x) {\n  return((x - mean(x)) / sd(x))\n}\n\nscaled_independent_variables &lt;- as.data.frame(lapply(independent_variables, standardize))\n\nscaled_regression_model &lt;- lm(dependent_variable ~ ., data = scaled_independent_variables)\n\nsummary(scaled_regression_model)\n\n\n\nCall:\nlm(formula = dependent_variable ~ ., data = scaled_independent_variables)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-55.137  -4.937  -0.133   3.729  80.867 \n\nCoefficients: (1 not defined because of singularities)\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   14.7497     0.3723  39.619  &lt; 2e-16 ***\ncok_agir_hasarli_bina_sayisi  42.8283     1.9148  22.367  &lt; 2e-16 ***\nagir_hasarli_bina_sayisi     -60.5864     4.6481 -13.035  &lt; 2e-16 ***\norta_hasarli_bina_sayisi      48.3867     5.6024   8.637  &lt; 2e-16 ***\nhafif_hasarli_bina_sayisi     -7.3059     4.1575  -1.757 0.079191 .  \ndogalgaz_boru_hasari           0.8949     0.7459   1.200 0.230507    \nicme_suyu_boru_hasari          0.5104     0.8291   0.616 0.538297    \natik_su_boru_hasari            6.4169     0.8359   7.676 4.07e-14 ***\nonce_1980                      1.2912     2.0357   0.634 0.526049    \nara_1980_2000                  6.1606     3.5634   1.729 0.084161 .  \nsonra_2000                     2.4245     2.4252   1.000 0.317712    \nara_1_4_kat                  -14.8254     4.2357  -3.500 0.000487 ***\nara_5_9_kat                   -1.7927     2.3339  -0.768 0.442619    \nara_9_19_kat                       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.53 on 946 degrees of freedom\nMultiple R-squared:  0.8422,    Adjusted R-squared:  0.8402 \nF-statistic: 420.7 on 12 and 946 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Data",
    "section": "",
    "text": "Datasets shown below downloaded from Istanbul Metropolitan Municipality website as csv and xlsx files. Separate links are also provided.\n\nData Sets\n\nEarthquake Scenario Analysis Results\nIn this dataset some column names has been changed. Structure and first 10 observation can be seen below. Download R.Data file to see the entire dataframe.\n\n\nCode\nlibrary(dplyr)\nlibrary(readr)\nlibrary(knitr)\ndeprem_analiz &lt;- read.csv(\"Deprem_senaryosu_analiz_sonuçlar.csv\")\ndeprem_analiz$ilce_adi &lt;- gsub(\"Ý\", \"İ\", deprem_analiz$ilce_adi, fixed = TRUE)\ndeprem_analiz$ilce_adi &lt;- gsub(\"Ð\", \"Ğ\", deprem_analiz$ilce_adi, fixed = TRUE)\ndeprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\ndeprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n\ncolnames(deprem_analiz)[1:4] &lt;- c(\"id\", \"ilce_adi\", \"mahalle_adi\", \"mahalle_kodu\")\nkable(str(deprem_analiz), caption=\"Structure of deprem_analiz\")\n\n\n'data.frame':   959 obs. of  16 variables:\n $ id                          : int  1 2 3 4 5 6 7 8 9 10 ...\n $ ilce_adi                    : chr  \"ADALAR\" \"ADALAR\" \"ADALAR\" \"ADALAR\" ...\n $ mahalle_adi                 : chr  \"BURGAZADA\" \"HEYBELÝADA\" \"KINALIADA\" \"MADEN\" ...\n $ mahalle_kodu                : int  40139 40142 40143 40140 40141 40490 99359 40478 40482 191981 ...\n $ cok_agir_hasarli_bina_sayisi: int  54 101 53 104 101 1 2 1 1 1 ...\n $ agir_hasarli_bina_sayisi    : int  99 175 97 192 180 3 13 6 6 5 ...\n $ orta_hasarli_bina_sayisi    : int  256 423 287 483 445 21 108 51 49 23 ...\n $ hafif_hasarli_bina_sayisi   : int  241 393 302 484 422 57 371 199 129 65 ...\n $ can_kaybi_sayisi            : int  8 25 5 22 16 0 0 0 0 0 ...\n $ agir_yarali_sayisi          : int  6 21 3 18 13 0 0 0 0 0 ...\n $ hastanede_tedavi_sayisi     : int  24 66 15 64 48 1 8 2 2 0 ...\n $ hafif_yarali_sayisi         : int  42 113 27 113 83 3 26 10 8 0 ...\n $ dogalgaz_boru_hasari        : int  0 1 0 1 1 0 1 0 0 0 ...\n $ icme_suyu_boru_hasari       : int  0 1 1 1 2 0 1 1 0 0 ...\n $ atik_su_boru_hasari         : int  1 2 1 2 2 0 1 1 0 0 ...\n $ gecici_barinma              : int  398 763 420 847 687 89 659 273 209 26 ...\n\n\nTable: Structure of deprem_analiz\n\n\nCode\nsave(deprem_analiz, file = \"deprem_analiz.RData\")\n\n\nNeighborhood-Based Building Numbers in 2017\ntoplam_bina column is calculated and added to the last. Also, some colum names has been changed.\n\n\nCode\nmahalle_bazli_bina &lt;- read.csv(\"mahalle_bazli_bina_2017.csv\")\ncolnames(mahalle_bazli_bina) &lt;- c(\"id\", \"ilce_adi\", \"mahalle_adi\", \"mahalle_kodu\", \"once_1980\", \"ara_1980_2000\", \"sonra_2000\", \"ara_1_4_kat\", \"ara_5_9_kat\", \"ara_9_19_kat\")\n\nmahalle_bazli_bina$ilce_adi &lt;- gsub(\"Ý\", \"İ\", deprem_analiz$ilce_adi, fixed = TRUE)\nmahalle_bazli_bina$ilce_adi &lt;- gsub(\"Ð\", \"Ğ\", deprem_analiz$ilce_adi, fixed = TRUE)\nmahalle_bazli_bina$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\nmahalle_bazli_bina$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n\nmahalle_bazli_bina$mahalle_adi &lt;- gsub(\"Ý\", \"İ\", deprem_analiz$ilce_adi, fixed = TRUE)\nmahalle_bazli_bina$mahalle_adi &lt;- gsub(\"Ð\", \"Ğ\", deprem_analiz$ilce_adi, fixed = TRUE)\nmahalle_bazli_bina$mahalle_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\nmahalle_bazli_bina$mahalle_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)    \n\ntoplam_bina &lt;- mahalle_bazli_bina %&gt;% \n  select(ara_1_4_kat,ara_5_9_kat,ara_9_19_kat) %&gt;%\n  rowwise() %&gt;%\n  do( (.) %&gt;% as.data.frame() %&gt;% mutate(toplam_bina = sum(.))) %&gt;%\n  ungroup %&gt;%\n  select(toplam_bina)\nmahalle_bazli_bina &lt;- cbind(mahalle_bazli_bina, toplam_bina)\nstr(mahalle_bazli_bina)\n\n\n'data.frame':   959 obs. of  11 variables:\n $ id           : int  1 2 3 4 5 6 7 8 9 10 ...\n $ ilce_adi     : chr  \"ADALAR\" \"ADALAR\" \"ADALAR\" \"ADALAR\" ...\n $ mahalle_adi  : chr  \"ADALAR\" \"ADALAR\" \"ADALAR\" \"ADALAR\" ...\n $ mahalle_kodu : int  40139 40142 40143 40140 40141 40490 99359 40478 40482 191981 ...\n $ once_1980    : int  433 836 610 863 842 0 0 0 0 0 ...\n $ ara_1980_2000: int  214 347 244 510 426 244 1360 685 565 332 ...\n $ sonra_2000   : int  173 212 158 308 217 121 845 589 216 184 ...\n $ ara_1_4_kat  : int  802 1359 923 1637 1434 353 1647 797 754 515 ...\n $ ara_5_9_kat  : int  18 36 89 44 51 12 555 470 27 1 ...\n $ ara_9_19_kat : int  0 0 0 0 0 0 3 7 0 0 ...\n $ toplam_bina  : int  820 1395 1012 1681 1485 365 2205 1274 781 516 ...\n\n\nCode\nkable(head(mahalle_bazli_bina, n = 10L), caption=\"Head of Mahalle Bazlı Bina\")\n\n\n\nHead of Mahalle Bazlı Bina\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nilce_adi\nmahalle_adi\nmahalle_kodu\nonce_1980\nara_1980_2000\nsonra_2000\nara_1_4_kat\nara_5_9_kat\nara_9_19_kat\ntoplam_bina\n\n\n\n\n1\nADALAR\nADALAR\n40139\n433\n214\n173\n802\n18\n0\n820\n\n\n2\nADALAR\nADALAR\n40142\n836\n347\n212\n1359\n36\n0\n1395\n\n\n3\nADALAR\nADALAR\n40143\n610\n244\n158\n923\n89\n0\n1012\n\n\n4\nADALAR\nADALAR\n40140\n863\n510\n308\n1637\n44\n0\n1681\n\n\n5\nADALAR\nADALAR\n40141\n842\n426\n217\n1434\n51\n0\n1485\n\n\n6\nARNAVUTKÖY\nARNAVUTKÖY\n40490\n0\n244\n121\n353\n12\n0\n365\n\n\n7\nARNAVUTKÖY\nARNAVUTKÖY\n99359\n0\n1360\n845\n1647\n555\n3\n2205\n\n\n8\nARNAVUTKÖY\nARNAVUTKÖY\n40478\n0\n685\n589\n797\n470\n7\n1274\n\n\n9\nARNAVUTKÖY\nARNAVUTKÖY\n40482\n0\n565\n216\n754\n27\n0\n781\n\n\n10\nARNAVUTKÖY\nARNAVUTKÖY\n191981\n0\n332\n184\n515\n1\n0\n516\n\n\n\n\n\nA new column has been created to examine buildings in districts separately. You can see the first 10 district that have highest number of buildings.\n\n\nCode\nkable(mahalle_bazli_bina %&gt;% \n  group_by(ilce_adi) %&gt;%\n  summarize(ilce_bazli_bina = sum(toplam_bina)) %&gt;%\n  arrange(desc(ilce_bazli_bina)) %&gt;%\n  head(n = 10L))\n\n\n\n\n\nilce_adi\nilce_bazli_bina\n\n\n\n\nÜMRANİYE\n52612\n\n\nPENDİK\n51491\n\n\nBEYKOZ\n51201\n\n\nSİLİVRİ\n50014\n\n\nSARIYER\n49360\n\n\nFATİH\n43560\n\n\nBAĞCILAR\n42439\n\n\nÜSKÜDAR\n41731\n\n\nKÜÇÜKÇEKMECE\n40136\n\n\nESENYURT\n38685\n\n\n\n\n\n\n\nCode\nsave(mahalle_bazli_bina, file = \"mahalle_bazli_bina.RData\")\n\n\nRefer to R.Data file.\nMunicipality Population in 2019\nStructure and first 10 observation can be seen below.\n\n\nCode\nlibrary(readxl)\nnufus &lt;- read_excel(\"belediye_nufuslar_2019.xlsx\")\nstr(nufus)\n\n\ntibble [39 × 2] (S3: tbl_df/tbl/data.frame)\n $ Belediyeler        : chr [1:39] \"Adalar Belediyesi\" \"Arnavutköy Belediyesi\" \"Ataşehir Belediyesi\" \"Avcılar Belediyesi\" ...\n $ 2019 yılı nüfusları: num [1:39] 15238 282488 425094 448882 745125 ...\n\n\nCode\nhead(nufus, n = 30L)\n\n\n# A tibble: 30 × 2\n   Belediyeler             `2019 yılı nüfusları`\n   &lt;chr&gt;                                   &lt;dbl&gt;\n 1 Adalar Belediyesi                       15238\n 2 Arnavutköy Belediyesi                  282488\n 3 Ataşehir Belediyesi                    425094\n 4 Avcılar Belediyesi                     448882\n 5 Bağcılar Belediyesi                    745125\n 6 Bahçelievler Belediyesi                611059\n 7 Bakırköy Belediyesi                    229239\n 8 Başakşehir Belediyesi                  460259\n 9 Bayrampaşa Belediyesi                  274735\n10 Beşiktaş Belediyesi                    182649\n# ℹ 20 more rows\n\n\nCode\nsave(nufus, file = \"nufus.RData\")\n\n\nYou can also download this dataset as R.Data file.\nAn Overview\n\n\nCode\nlibrary(ggplot2)\nvis &lt;- deprem_analiz %&gt;% \n  inner_join(mahalle_bazli_bina, by = \"id\") %&gt;%\n  select(ilce_adi.x, ara_1_4_kat, ara_5_9_kat, ara_9_19_kat, toplam_bina, can_kaybi_sayisi) \n\nvis %&gt;% ggplot(aes(x = toplam_bina, y = can_kaybi_sayisi, color = ilce_adi.x )) + geom_abline(slope = log10(10)/log10(100),intercept = 0) +\n  scale_x_log10()+\n  scale_y_log10()+\n  geom_point()\n\n\nWarning: Transformation introduced infinite values in continuous y-axis\n\n\n\n\n\nThe plot shown above shows us total loss vs total number of buildings.\n\n\nCode\nvis2 &lt;- deprem_analiz %&gt;% \n  inner_join(mahalle_bazli_bina, by = \"id\") %&gt;%\n  select(ilce_adi.x,once_1980, ara_1980_2000, sonra_2000, toplam_bina, can_kaybi_sayisi,toplam_bina) %&gt;% \n  group_by(ilce_adi.x) %&gt;%\n  summarize(toplam_once_1980 = sum(once_1980), toplam_ara_1980_2000 = sum(ara_1980_2000), toplam_sonra_2000 = sum(sonra_2000))\n\n\nggplot(vis2, aes(x = ilce_adi.x)) +\n  geom_bar(aes(y = toplam_once_1980), stat = \"identity\", fill = \"blue\", position = \"dodge\") +\n  geom_bar(aes(y = toplam_ara_1980_2000), stat = \"identity\", fill = \"green\", position = \"dodge\") +\n  geom_bar(aes(y = toplam_sonra_2000), stat = \"identity\", fill = \"red\", position = \"dodge\") +\n  labs(title = \"Toplam Değerler - İlçelere Göre\", x = \"İlçe Adı\", y = \"Toplam Değer\") +\n  scale_fill_manual(values = c(\"Once 1980\" = \"blue\", \"Ara 1980-2000\" = \"green\", \"Sonra 2000\" = \"red\"),\n                    name = \"Zaman Aralığı\",\n                    labels = c(\"Once 1980\", \"Ara 1980-2000\", \"Sonra 2000\")) +\n  theme_minimal() +\n  theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))+\n  guides(fill = guide_legend(title = \"Zaman Aralığı\"))\n\n\n\n\n\nThis plot shows us total building for each time zone vs district.\nNote: blue –&gt; before 1980, green –&gt; between 1980 - 2000, red –&gt; after 2000.\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "analysis.html#analysis-of-eartquake-analysis-and-results-data",
    "href": "analysis.html#analysis-of-eartquake-analysis-and-results-data",
    "title": "Analysis - Team Safe Istanbul",
    "section": "",
    "text": "Code\n    library(dplyr)\n    library(readr)\n    library(knitr)\n    library(ggplot2)\n    library(leaflet)\n    library(readxl)\n    library(gridExtra)\n    \n    deprem_analiz &lt;- read.csv(\"Deprem_senaryosu_analiz_sonuçlar.csv\")\n    deprem_analiz$ilce_adi &lt;- gsub(\"Ý\", \"İ\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Ð\", \"Ğ\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n    \n    deprem_analiz &lt;- data.frame(lapply(deprem_analiz, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))\n    \n    nufus &lt;- read_excel(\"belediye_nufuslar_2019.xlsx\")\n    nufus &lt;- data.frame(lapply(nufus, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))\n    nufus$Belediyeler &lt;- gsub(\"belediyesi\", \"\", nufus$Belediyeler)\n   \n\n    istanbul_coordinates &lt;- read.csv(\"istanbul_koordinatlar.csv\")\n    istanbul_coordinates &lt;- data.frame(lapply(istanbul_coordinates, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))    \n    \n\nistanbul_df &lt;- data.frame(read_excel(\"istanbul_df.xlsx\"))\nistanbul_df &lt;- cbind(istanbul_df, nufus)\nistanbul_df &lt;- istanbul_df %&gt;% \n  select(-Belediyeler) %&gt;% \n  select(ilce_adi, X2019.yılı.nüfusları, cok_agir_hasarli_bina_sayisi:last_col())\n\n    \n    colnames(deprem_analiz)[1:4] &lt;- c(\"id\", \"ilce_adi\", \"mahalle_adi\", \"mahalle_kodu\")\n    district_sum &lt;- deprem_analiz %&gt;% group_by(ilce_adi) %&gt;% summarise(\n                                                                  total_cok_agir_hasarli = sum(cok_agir_hasarli_bina_sayisi),\n                                                                  total_agir_hasarli = sum(agir_hasarli_bina_sayisi),\n                                                                  total_orta_hasarli = sum(orta_hasarli_bina_sayisi),\n                                                                  total_hafif_hasarli = sum(hafif_hasarli_bina_sayisi),\n                                                                  total_can_kaybi = sum(can_kaybi_sayisi),\n                                                                  total_agir_yarali = sum(agir_yarali_sayisi),\n                                                                  total_hafif_yarali = sum(hafif_yarali_sayisi),\n                                                                  .groups = 'drop')\n    \ndistrict_sum &lt;- data.frame(district_sum)\n\n    district_avg &lt;- deprem_analiz %&gt;% group_by(ilce_adi) %&gt;% summarise(\n                                                                  avg_cok_agir_hasarli = mean(cok_agir_hasarli_bina_sayisi),\n                                                                  avg_agir_hasarli = mean(agir_hasarli_bina_sayisi),\n                                                                  avg_orta_hasarli = mean(orta_hasarli_bina_sayisi),\n                                                                  avg_hafif_hasarli = mean(hafif_hasarli_bina_sayisi),\n                                                                  avg_can_kaybi = mean(can_kaybi_sayisi),\n                                                                  avg_agir_yarali = mean(agir_yarali_sayisi),\n                                                                  avg_hafif_yarali = mean(hafif_yarali_sayisi),\n                                                                 .groups = 'drop')\n    district_avg$ilce_adi &lt;- factor(district_avg$ilce_adi, levels = unique(district_avg$ilce_adi))\n    \n    kable(head(district_avg, 10), caption=\"Data\")\n\n\n\nData\n\n\n\n\n\n\n\n\n\n\n\n\nilce_adi\navg_cok_agir_hasarli\navg_agir_hasarli\navg_orta_hasarli\navg_hafif_hasarli\navg_can_kaybi\navg_agir_yarali\navg_hafif_yarali\n\n\n\n\nadalar\n82.600000\n148.600000\n378.80000\n368.4000\n15.2000000\n12.2000000\n75.600000\n\n\narnavutköy\n1.078947\n6.394737\n44.84211\n130.2632\n0.0000000\n0.0000000\n4.710526\n\n\nataşehir\n7.235294\n27.705882\n162.11765\n401.9412\n5.2352941\n2.7647059\n44.411765\n\n\navcilar\n23.300000\n126.100000\n554.50000\n928.5000\n46.5000000\n23.9000000\n279.900000\n\n\nbahçelievler\n72.363636\n135.454545\n515.27273\n880.5455\n148.4545455\n79.9090909\n690.818182\n\n\nbakirköy\n52.133333\n87.066667\n226.26667\n262.6000\n69.7333333\n38.7333333\n307.333333\n\n\nbayrampaşa\n55.818182\n107.454545\n369.00000\n674.0909\n47.2727273\n30.9090909\n229.909091\n\n\nbağcilar\n36.181818\n82.954545\n363.68182\n699.8636\n53.5909091\n29.6363636\n266.772727\n\n\nbaşakşehir\n11.500000\n57.500000\n297.70000\n624.3000\n7.1000000\n4.5000000\n67.000000\n\n\nbeykoz\n2.511111\n9.844444\n61.24444\n163.4667\n0.5555556\n0.3555556\n6.311111\n\n\n\n\n\n\n\nCode\n    building_avg_line &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_line(aes(y = avg_cok_agir_hasarli, group = 1, color = \"Çok Ağır Hasarlı\")) +\n                geom_line(aes(y = avg_agir_hasarli, group = 1, color = \"Ağır Hasarlı\")) +\n                geom_line(aes(y = avg_orta_hasarli, group = 1, color = \"Orta Hasarlı\")) +\n                geom_line(aes(y = avg_hafif_hasarli, group = 1, color = \"Hafif Hasarlı\")) +\n                ylab(\"Ortalama Bina Sayısı\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar (Line Chart)\") +\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n                scale_color_manual(values = c(\"Çok Ağır Hasarlı\" = \"red\", \"Ağır Hasarlı\" = \"orange\", \n                                              \"Orta Hasarlı\" = \"blue\", \"Hafif Hasarlı\" = \"black\"))\n  \n    building_avg_bar &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_bar(aes(y = avg_hafif_hasarli), fill = \"black\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_orta_hasarli), fill = \"blue\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_agir_hasarli), fill = \"orange\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_cok_agir_hasarli), fill = \"red\", position = \"dodge\", stat = \"identity\") +\n                ylab(\"Ortalama Bina Sayısı\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar\")+\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n    avg_health &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_line(aes(y = avg_can_kaybi, group = 1, color = \"Can Kaybı\")) +\n                geom_line(aes(y = avg_agir_yarali, group = 1, color = \"Ağır Yaralı\")) +\n                geom_line(aes(y = avg_hafif_yarali, group = 1, color = \"Hafif Yaralı\")) +\n                ylab(\"Yaralanma ve Can Kaybi\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar (Line Chart)\") +\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n                scale_color_manual(values = c(\"Can Kaybı\" = \"black\", \"Ağır Yaralı\" = \"red\", \n                                              \"Hafif Yaralı\" = \"blue\"))\n\n\n\n\n\n\nCode\navg_health\n\n\n\n\n\n\n\n\n\n\nCode\n  building_avg_line\n\n\n\n\n\n\n\n\n\n\nCode\n    danger_level &lt;- as.numeric(istanbul_df$can_kaybi_sayisi/istanbul_df$X2019.yılı.nüfusları * 1000)\n    istanbul_coordinates$danger_level &lt;- as.numeric(format(danger_level, scientific = FALSE))\n    istanbul_coordinates &lt;- istanbul_coordinates[order(istanbul_coordinates$danger_level, decreasing = TRUE),]\n    \n    istanbul_coordinates$color &lt;- ifelse(istanbul_coordinates$danger_level &gt; 2, \"red\",\n                                         ifelse(istanbul_coordinates$danger_level &gt; 0.75, \"blue\", \"green\"))\n    istanbul_coordinates$danger_level &lt;- format(istanbul_coordinates$danger_level, scientific = FALSE)\n    \n    kable(head(istanbul_coordinates, 10), caption = \"istanbul something.\")\n\n\n\nistanbul something.\n\n\n\nilceler\nlatitude\nlongitude\ndanger_level\ncolor\n\n\n\n\n1\nadalar\n40.86780\n29.13310\n4.987531172\nred\n\n\n7\nbakırköy\n40.98064\n28.86287\n4.562923412\nred\n\n\n20\nfatih\n41.01446\n28.95455\n3.349206707\nred\n\n\n6\nbahçelievler\n41.00029\n28.86375\n2.672409702\nred\n\n\n22\ngüngören\n41.01981\n28.87484\n2.605021403\nred\n\n\n39\nzeytinburnu\n41.00562\n28.90820\n2.275405860\nred\n\n\n26\nküçükçekmece\n40.99600\n28.77480\n1.910897920\nblue\n\n\n9\nbayrampaşa\n41.05125\n28.89847\n1.892732997\nblue\n\n\n5\nbağcılar\n41.04473\n28.83371\n1.582284852\nblue\n\n\n31\nsilivri\n41.07390\n28.24640\n1.538788072\nblue\n\n\n\n\n\n\n\n\n\n\nCode\n    istanbul_df %&gt;%\n  select(ilce_adi, X2019.yılı.nüfusları, can_kaybi_sayisi) %&gt;%\n  ggplot(aes(x = ilce_adi, y = can_kaybi_sayisi)) +\n  geom_point(aes(size = X2019.yılı.nüfusları, color = cut(((can_kaybi_sayisi / X2019.yılı.nüfusları) * 1000), \n                                                          breaks = c(0, 0.7, 2, 5), \n                                                          labels = c(\"Least Dangerous\", \"Medium Dangerous\", \"High Dangerous\")))) +\n  scale_color_manual(values = c(\"High Dangerous\" = \"red\", \"Medium Dangerous\" = \"blue\", \"Least Dangerous\" = \"green\"))+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = \"none\") +\n  xlab(\"District\") +\n  ylab(\"Death\") +\n  scale_y_continuous(limits = c(0, max(istanbul_df$can_kaybi_sayisi) * 1.1)) +\n  scale_size_continuous(range=c(2,8))\n\n\n\n\n\n\n\n\n\n\nCode\n    harita &lt;- leaflet(istanbul_coordinates) %&gt;%\n      addTiles() %&gt;%\n      addCircleMarkers(\n        lng = ~longitude,\n        lat = ~latitude,\n        radius = istanbul_df$X2019.yılı.nüfusları/50000,\n        color = ~color,\n        fillOpacity = 0.65,\n        popup = ~paste(ilceler, \": \", danger_level)\n      )\n\n    harita\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nplot1 &lt;- ggplot(istanbul_df, aes(x = cok_agir_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(cok_agir_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, cok_agir_hasarli_bina_sayisi)), \n            hjust = 0, vjust = -2.5, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Çok Ağır Hasarlı Bina Sayısı\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot2 &lt;- ggplot(istanbul_df, aes(x = agir_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(agir_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, agir_hasarli_bina_sayisi)), \n            hjust = 0, vjust = -1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Ağır Hasarlı Bina Sayısı\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot3 &lt;- ggplot(istanbul_df, aes(x = orta_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(orta_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, orta_hasarli_bina_sayisi)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Orta Hasarlı Bina Sayısı\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot4 &lt;- ggplot(istanbul_df, aes(x = hafif_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"purple\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"purple\") +\n  geom_text(aes(x = min(hafif_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, hafif_hasarli_bina_sayisi)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Hafif Hasarlı Bina Sayısı\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(plot1, plot2, plot3, plot4, ncol = 2)"
  },
  {
    "objectID": "analysis.html#loss-of-life-rates",
    "href": "analysis.html#loss-of-life-rates",
    "title": "Analysis - Team Safe Istanbul",
    "section": "Loss of Life Rates",
    "text": "Loss of Life Rates\n\nby Age of Buildings\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nbina_yası_plot1 &lt;- ggplot(istanbul_df, aes(x = once_1980)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(once_1980), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, once_1980)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings Before 1980\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nbina_yası_plot2 &lt;- ggplot(istanbul_df, aes(x = ara_1980_2000)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(ara_1980_2000), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_1980_2000)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings Between 1980-2000\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nbina_yası_plot3 &lt;- ggplot(istanbul_df, aes(x = sonra_2000)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(sonra_2000), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, sonra_2000)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings After 2000\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(bina_yası_plot1, bina_yası_plot2, bina_yası_plot3, ncol = 2)\n\n\n\n\n\n\n\nby Storeys of the Buildings\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nkat_sayisi_plot1 &lt;- ggplot(istanbul_df, aes(x = ara_1_4_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(ara_1_4_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_1_4_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 1 to 4 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nkat_sayisi_plot2 &lt;- ggplot(istanbul_df, aes(x = ara_5_9_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(ara_5_9_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_5_9_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 5 to 9 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nkat_sayisi_plot3 &lt;- ggplot(istanbul_df, aes(x = ara_9_19_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(ara_9_19_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_9_19_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 9 to 19 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(kat_sayisi_plot1, kat_sayisi_plot2, kat_sayisi_plot3, ncol = 2)\n\n\n\n\n\n\n\nby Installation Pipes Failures\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\ntesisat_arizasi_plot1 &lt;- ggplot(istanbul_df, aes(x = dogalgaz_boru_hasari)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(dogalgaz_boru_hasari), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, dogalgaz_boru_hasari)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Gas Pipe Damage\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ntesisat_arizasi_plot2 &lt;- ggplot(istanbul_df, aes(x = icme_suyu_boru_hasari)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(icme_suyu_boru_hasari), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, icme_suyu_boru_hasari)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Drinking Water Pipe Damage\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ntesisat_arizasi_plot3 &lt;- ggplot(istanbul_df, aes(x = atik_su_boru_hasari)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(atik_su_boru_hasari), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, atik_su_boru_hasari)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Wastewater Pipe Damage\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(tesisat_arizasi_plot1, tesisat_arizasi_plot2, tesisat_arizasi_plot3, ncol = 2)\n\n\n\n\n\n\n\nCode\nregmodel1 &lt;- read_xlsx(\"veri1.xlsx\")\nregmodel1\n\n\n# A tibble: 959 × 20\n   ilce_adi cok_agir_hasarli_bin…¹ agir_hasarli_bina_sa…² orta_hasarli_bina_sa…³\n   &lt;chr&gt;                     &lt;dbl&gt;                  &lt;dbl&gt;                  &lt;dbl&gt;\n 1 adalar                       54                     99                    256\n 2 adalar                      101                    175                    423\n 3 adalar                       53                     97                    287\n 4 adalar                      104                    192                    483\n 5 adalar                      101                    180                    445\n 6 arnavut…                      1                      3                     21\n 7 arnavut…                      2                     13                    108\n 8 arnavut…                      1                      6                     51\n 9 arnavut…                      1                      6                     49\n10 arnavut…                      1                      5                     23\n# ℹ 949 more rows\n# ℹ abbreviated names: ¹​cok_agir_hasarli_bina_sayisi,\n#   ²​agir_hasarli_bina_sayisi, ³​orta_hasarli_bina_sayisi\n# ℹ 16 more variables: hafif_hasarli_bina_sayisi &lt;dbl&gt;,\n#   agir_yarali_sayisi &lt;dbl&gt;, hastanede_tedavi_sayisi &lt;dbl&gt;,\n#   hafif_yarali_sayisi &lt;dbl&gt;, dogalgaz_boru_hasari &lt;dbl&gt;,\n#   icme_suyu_boru_hasari &lt;dbl&gt;, atik_su_boru_hasari &lt;dbl&gt;, …\n\n\n\n\nCode\n# Veri setindeki bağımlı ve bağımsız değişkenleri seçin\ndependent_variable &lt;- regmodel1$can_kaybi_sayisi\nindependent_variables &lt;- regmodel1[, c(\n  \"cok_agir_hasarli_bina_sayisi\",\n  \"agir_hasarli_bina_sayisi\",\n  \"orta_hasarli_bina_sayisi\",\n  \"hafif_hasarli_bina_sayisi\",\n  \"dogalgaz_boru_hasari\",\n  \"icme_suyu_boru_hasari\",\n  \"atik_su_boru_hasari\",\n  \"once_1980\",\n  \"ara_1980_2000\",\n  \"sonra_2000\",\n  \"ara_1_4_kat\",\n  \"ara_5_9_kat\",\n  \"ara_9_19_kat\"\n)]\n\n# Regresyon modelini kurun\nregression_model &lt;- lm(dependent_variable ~ ., data = independent_variables)\n\n# Model özetini görüntüle\nsummary(regression_model)\n\n\n\nCall:\nlm(formula = dependent_variable ~ ., data = independent_variables)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-55.137  -4.937  -0.133   3.729  80.867 \n\nCoefficients: (1 not defined because of singularities)\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   0.479831   0.673288   0.713 0.476227    \ncok_agir_hasarli_bina_sayisi  1.979952   0.088522  22.367  &lt; 2e-16 ***\nagir_hasarli_bina_sayisi     -1.347692   0.103394 -13.035  &lt; 2e-16 ***\norta_hasarli_bina_sayisi      0.298233   0.034531   8.637  &lt; 2e-16 ***\nhafif_hasarli_bina_sayisi    -0.027240   0.015501  -1.757 0.079191 .  \ndogalgaz_boru_hasari          1.480928   1.234285   1.200 0.230507    \nicme_suyu_boru_hasari         0.678961   1.102898   0.616 0.538297    \natik_su_boru_hasari           4.191003   0.545961   7.676 4.07e-14 ***\nonce_1980                     0.004055   0.006394   0.634 0.526049    \nara_1980_2000                 0.010950   0.006334   1.729 0.084161 .  \nsonra_2000                    0.006138   0.006140   1.000 0.317712    \nara_1_4_kat                  -0.019785   0.005653  -3.500 0.000487 ***\nara_5_9_kat                  -0.004143   0.005394  -0.768 0.442619    \nara_9_19_kat                        NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.53 on 946 degrees of freedom\nMultiple R-squared:  0.8422,    Adjusted R-squared:  0.8402 \nF-statistic: 420.7 on 12 and 946 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nCode\nstandardize &lt;- function(x) {\n  return((x - mean(x)) / sd(x))\n}\n\n# Bağımsız değişkenlere scaling uygula\nscaled_independent_variables &lt;- as.data.frame(lapply(independent_variables, standardize))\n\n# Regresyon modelini kur\nscaled_regression_model &lt;- lm(dependent_variable ~ ., data = scaled_independent_variables)\n\n# Model özetini görüntüle\nsummary(scaled_regression_model)\n\n\n\nCall:\nlm(formula = dependent_variable ~ ., data = scaled_independent_variables)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-55.137  -4.937  -0.133   3.729  80.867 \n\nCoefficients: (1 not defined because of singularities)\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   14.7497     0.3723  39.619  &lt; 2e-16 ***\ncok_agir_hasarli_bina_sayisi  42.8283     1.9148  22.367  &lt; 2e-16 ***\nagir_hasarli_bina_sayisi     -60.5864     4.6481 -13.035  &lt; 2e-16 ***\norta_hasarli_bina_sayisi      48.3867     5.6024   8.637  &lt; 2e-16 ***\nhafif_hasarli_bina_sayisi     -7.3059     4.1575  -1.757 0.079191 .  \ndogalgaz_boru_hasari           0.8949     0.7459   1.200 0.230507    \nicme_suyu_boru_hasari          0.5104     0.8291   0.616 0.538297    \natik_su_boru_hasari            6.4169     0.8359   7.676 4.07e-14 ***\nonce_1980                      1.2912     2.0357   0.634 0.526049    \nara_1980_2000                  6.1606     3.5634   1.729 0.084161 .  \nsonra_2000                     2.4245     2.4252   1.000 0.317712    \nara_1_4_kat                  -14.8254     4.2357  -3.500 0.000487 ***\nara_5_9_kat                   -1.7927     2.3339  -0.768 0.442619    \nara_9_19_kat                       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.53 on 946 degrees of freedom\nMultiple R-squared:  0.8422,    Adjusted R-squared:  0.8402 \nF-statistic: 420.7 on 12 and 946 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nCode\n# Min-Max Scaling (Normalizasyon) fonksiyonu\nmin_max_scale &lt;- function(x) {\n  return((x - min(x)) / (max(x) - min(x)))\n}\n\n# Bağımsız değişkenlere scaling uygula\nscaled_independent_variables_min_max &lt;- as.data.frame(lapply(independent_variables, min_max_scale))\n\n# Regresyon modelini kur\nscaled_regression_model_min_max &lt;- lm(dependent_variable ~ ., data = scaled_independent_variables_min_max)\n\n# Model özetini görüntüle\nsummary(scaled_regression_model_min_max)\n\n\n\nCall:\nlm(formula = dependent_variable ~ ., data = scaled_independent_variables_min_max)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-55.137  -4.937  -0.133   3.729  80.867 \n\nCoefficients: (1 not defined because of singularities)\n                              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                     0.2671     0.6800   0.393 0.694586    \ncok_agir_hasarli_bina_sayisi  397.9703    17.7928  22.367  &lt; 2e-16 ***\nagir_hasarli_bina_sayisi     -421.8276    32.3622 -13.035  &lt; 2e-16 ***\norta_hasarli_bina_sayisi      466.7339    54.0406   8.637  &lt; 2e-16 ***\nhafif_hasarli_bina_sayisi     -66.7392    37.9783  -1.757 0.079191 .  \ndogalgaz_boru_hasari            5.9237     4.9371   1.200 0.230507    \nicme_suyu_boru_hasari           4.7527     7.7203   0.616 0.538297    \natik_su_boru_hasari            58.6740     7.6435   7.676 4.07e-14 ***\nonce_1980                       8.2851    13.0622   0.634 0.526049    \nara_1980_2000                  46.4602    26.8733   1.729 0.084161 .  \nsonra_2000                     23.7866    23.7937   1.000 0.317712    \nara_1_4_kat                  -145.5016    41.5709  -3.500 0.000487 ***\nara_5_9_kat                   -11.5544    15.0428  -0.768 0.442619    \nara_9_19_kat                        NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.53 on 946 degrees of freedom\nMultiple R-squared:  0.8422,    Adjusted R-squared:  0.8402 \nF-statistic: 420.7 on 12 and 946 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "analysis.html#earthquake-analysis-and-output-data",
    "href": "analysis.html#earthquake-analysis-and-output-data",
    "title": "Team Safe Istanbul",
    "section": "",
    "text": "Three CSV files existed, and they were combined based on the id numbers—that is, the “ilce_adi” column.\nThe previously stated preparation code was utilized in this procedure to deal with data imperfections, particularly with regard to the unstable letters used in the “ilce_adi” column\n\n\nCode\n    library(dplyr)\n    library(readr)\n    library(knitr)\n    library(ggplot2)\n    library(leaflet)\n    library(readxl)\n    library(gridExtra)\n    \n    deprem_analiz &lt;- read.csv(\"Deprem_senaryosu_analiz_sonuçlar.csv\")\n    deprem_analiz$ilce_adi &lt;- gsub(\"Ý\", \"İ\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Ð\", \"Ğ\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n    deprem_analiz$ilce_adi &lt;- gsub(\"Þ\", \"Ş\", deprem_analiz$ilce_adi, fixed = TRUE)\n    \n    deprem_analiz &lt;- data.frame(lapply(deprem_analiz, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))\n    \n    nufus &lt;- read_excel(\"belediye_nufuslar_2019.xlsx\")\n    nufus &lt;- data.frame(lapply(nufus, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))\n    nufus$Belediyeler &lt;- gsub(\"belediyesi\", \"\", nufus$Belediyeler)\n   \n\n    istanbul_coordinates &lt;- read.csv(\"istanbul_koordinatlar.csv\")\n    istanbul_coordinates &lt;- data.frame(lapply(istanbul_coordinates, function(v) {\n      if (is.character(v)) return(tolower(v))\n      else return(v)\n    }))    \n    \n\nistanbul_df &lt;- data.frame(read_excel(\"istanbul_df.xlsx\"))\nistanbul_df &lt;- cbind(istanbul_df, nufus)\nistanbul_df &lt;- istanbul_df %&gt;% \n  select(-Belediyeler) %&gt;% \n  select(ilce_adi, X2019.yılı.nüfusları, cok_agir_hasarli_bina_sayisi:last_col())\n\n    \n    colnames(deprem_analiz)[1:4] &lt;- c(\"id\", \"ilce_adi\", \"mahalle_adi\", \"mahalle_kodu\")\n    district_sum &lt;- deprem_analiz %&gt;% group_by(ilce_adi) %&gt;% summarise(\n                                                                  total_cok_agir_hasarli = sum(cok_agir_hasarli_bina_sayisi),\n                                                                  total_agir_hasarli = sum(agir_hasarli_bina_sayisi),\n                                                                  total_orta_hasarli = sum(orta_hasarli_bina_sayisi),\n                                                                  total_hafif_hasarli = sum(hafif_hasarli_bina_sayisi),\n                                                                  total_can_kaybi = sum(can_kaybi_sayisi),\n                                                                  total_agir_yarali = sum(agir_yarali_sayisi),\n                                                                  total_hafif_yarali = sum(hafif_yarali_sayisi),\n                                                                  .groups = 'drop')\n    \ndistrict_sum &lt;- data.frame(district_sum)\n\n    district_avg &lt;- deprem_analiz %&gt;% group_by(ilce_adi) %&gt;% summarise(\n                                                                  avg_cok_agir_hasarli = mean(cok_agir_hasarli_bina_sayisi),\n                                                                  avg_agir_hasarli = mean(agir_hasarli_bina_sayisi),\n                                                                  avg_orta_hasarli = mean(orta_hasarli_bina_sayisi),\n                                                                  avg_hafif_hasarli = mean(hafif_hasarli_bina_sayisi),\n                                                                  avg_can_kaybi = mean(can_kaybi_sayisi),\n                                                                  avg_agir_yarali = mean(agir_yarali_sayisi),\n                                                                  avg_hafif_yarali = mean(hafif_yarali_sayisi),\n                                                                 .groups = 'drop')\n    district_avg$ilce_adi &lt;- factor(district_avg$ilce_adi, levels = unique(district_avg$ilce_adi))\n    \n    kable(head(district_avg, 10), caption=\"Data\")\n\n\n\nData\n\n\n\n\n\n\n\n\n\n\n\n\nilce_adi\navg_cok_agir_hasarli\navg_agir_hasarli\navg_orta_hasarli\navg_hafif_hasarli\navg_can_kaybi\navg_agir_yarali\navg_hafif_yarali\n\n\n\n\nadalar\n82.600000\n148.600000\n378.80000\n368.4000\n15.2000000\n12.2000000\n75.600000\n\n\narnavutköy\n1.078947\n6.394737\n44.84211\n130.2632\n0.0000000\n0.0000000\n4.710526\n\n\nataşehir\n7.235294\n27.705882\n162.11765\n401.9412\n5.2352941\n2.7647059\n44.411765\n\n\navcilar\n23.300000\n126.100000\n554.50000\n928.5000\n46.5000000\n23.9000000\n279.900000\n\n\nbahçelievler\n72.363636\n135.454545\n515.27273\n880.5455\n148.4545455\n79.9090909\n690.818182\n\n\nbakirköy\n52.133333\n87.066667\n226.26667\n262.6000\n69.7333333\n38.7333333\n307.333333\n\n\nbayrampaşa\n55.818182\n107.454545\n369.00000\n674.0909\n47.2727273\n30.9090909\n229.909091\n\n\nbağcilar\n36.181818\n82.954545\n363.68182\n699.8636\n53.5909091\n29.6363636\n266.772727\n\n\nbaşakşehir\n11.500000\n57.500000\n297.70000\n624.3000\n7.1000000\n4.5000000\n67.000000\n\n\nbeykoz\n2.511111\n9.844444\n61.24444\n163.4667\n0.5555556\n0.3555556\n6.311111\n\n\n\n\n\n\n\nCode\n    building_avg_line &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_line(aes(y = avg_cok_agir_hasarli, group = 1, color = \"Çok Ağır Hasarlı\")) +\n                geom_line(aes(y = avg_agir_hasarli, group = 1, color = \"Ağır Hasarlı\")) +\n                geom_line(aes(y = avg_orta_hasarli, group = 1, color = \"Orta Hasarlı\")) +\n                geom_line(aes(y = avg_hafif_hasarli, group = 1, color = \"Hafif Hasarlı\")) +\n                ylab(\"Ortalama Bina Sayısı\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar (Line Chart)\") +\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n                scale_color_manual(values = c(\"Çok Ağır Hasarlı\" = \"red\", \"Ağır Hasarlı\" = \"orange\", \n                                              \"Orta Hasarlı\" = \"blue\", \"Hafif Hasarlı\" = \"black\"))\n  \n    building_avg_bar &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_bar(aes(y = avg_hafif_hasarli), fill = \"black\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_orta_hasarli), fill = \"blue\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_agir_hasarli), fill = \"orange\", position = \"dodge\", stat = \"identity\") +\n                geom_bar(aes(y = avg_cok_agir_hasarli), fill = \"red\", position = \"dodge\", stat = \"identity\") +\n                ylab(\"Ortalama Bina Sayısı\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar\")+\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n    avg_health &lt;- ggplot(district_avg, aes(x = ilce_adi)) +\n                geom_line(aes(y = avg_can_kaybi, group = 1, color = \"Can Kaybı\")) +\n                geom_line(aes(y = avg_agir_yarali, group = 1, color = \"Ağır Yaralı\")) +\n                geom_line(aes(y = avg_hafif_yarali, group = 1, color = \"Hafif Yaralı\")) +\n                ylab(\"Yaralanma ve Can Kaybi\") +\n                xlab(\"İlçe Adı\") +\n                ggtitle(\"Deprem Hasar Analizi İlçe Bazında Ortalamalar (Line Chart)\") +\n                theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n                scale_color_manual(values = c(\"Can Kaybı\" = \"black\", \"Ağır Yaralı\" = \"red\", \n                                              \"Hafif Yaralı\" = \"blue\"))\n\n\n\n\n\n\n\n\n\nCode\navg_health\n\n\n\n\n\n\nAbove we are able to see how many people would die or get injured in each district when the disaster comes. Focus on the districts that have the pick values. Do they get the highest value because they are really dangerous, or is it just because they have large population? In the following graphs we will also be focusing on the population.\n\n\n\n\n\n\nCode\n  building_avg_line\n\n\n\n\n\n\nThis plot shows us average number of buildings and classification of damaged buildings for each district. It looks similar to previous plot. So, there might be a correlation between deaths and damaged building number.\nLater you will also see this correlation levels.\n\n\n\n\n\n\nCode\n    danger_level &lt;- as.numeric(istanbul_df$can_kaybi_sayisi/istanbul_df$X2019.yılı.nüfusları * 1000)\n    istanbul_coordinates$danger_level &lt;- as.numeric(format(danger_level, scientific = FALSE))\n    istanbul_coordinates &lt;- istanbul_coordinates[order(istanbul_coordinates$danger_level, decreasing = TRUE),]\n    \n    istanbul_coordinates$color &lt;- ifelse(istanbul_coordinates$danger_level &gt; 2, \"red\",\n                                         ifelse(istanbul_coordinates$danger_level &gt; 0.75, \"blue\", \"green\"))\n    istanbul_coordinates$danger_level &lt;- format(istanbul_coordinates$danger_level, scientific = FALSE)\n    \n    kable(head(istanbul_coordinates, 10), caption = \"istanbul something.\")\n\n\n\nistanbul something.\n\n\n\nilceler\nlatitude\nlongitude\ndanger_level\ncolor\n\n\n\n\n1\nadalar\n40.86780\n29.13310\n4.987531172\nred\n\n\n7\nbakırköy\n40.98064\n28.86287\n4.562923412\nred\n\n\n20\nfatih\n41.01446\n28.95455\n3.349206707\nred\n\n\n6\nbahçelievler\n41.00029\n28.86375\n2.672409702\nred\n\n\n22\ngüngören\n41.01981\n28.87484\n2.605021403\nred\n\n\n39\nzeytinburnu\n41.00562\n28.90820\n2.275405860\nred\n\n\n26\nküçükçekmece\n40.99600\n28.77480\n1.910897920\nblue\n\n\n9\nbayrampaşa\n41.05125\n28.89847\n1.892732997\nblue\n\n\n5\nbağcılar\n41.04473\n28.83371\n1.582284852\nblue\n\n\n31\nsilivri\n41.07390\n28.24640\n1.538788072\nblue\n\n\n\n\n\n\nHere, we are able to see the danger zones which are determined by the ratio death/population for each district. Also, each district is assigned one of the following classification if they fall into related threshold values. High Dangerous colored by red, Medium Dangerous colored by blue and Least Dangerous colored by green.\n\n\n\n\n\n\nCode\n    istanbul_df %&gt;%\n  select(ilce_adi, X2019.yılı.nüfusları, can_kaybi_sayisi) %&gt;%\n  ggplot(aes(x = ilce_adi, y = can_kaybi_sayisi)) +\n  geom_point(aes(size = X2019.yılı.nüfusları, color = cut(((can_kaybi_sayisi / X2019.yılı.nüfusları) * 1000), \n                                                          breaks = c(0, 0.7, 2, 5), \n                                                          labels = c(\"Least Dangerous\", \"Medium Dangerous\", \"High Dangerous\")))) +\n  scale_color_manual(values = c(\"High Dangerous\" = \"red\", \"Medium Dangerous\" = \"blue\", \"Least Dangerous\" = \"green\"))+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), legend.position = \"none\") +\n  xlab(\"District\") +\n  ylab(\"Death\") +\n  scale_y_continuous(limits = c(0, max(istanbul_df$can_kaybi_sayisi) * 1.1)) +\n  scale_size_continuous(range=c(2,8))\n\n\n\n\n\n\nArea of the points show us the population size of the district and colors are the danger levels of each district based on the threshold levels determined.\nSo, here instead of only taking deaths into account, we are able to see relation of death with population. If deaths are high even if population is relatively small than others, we can say that this district is high dangerous zone. If the population is large, and deaths are relatively small, we can assume that this zone is safer than others. Finally, this relations are differs by colors.\n\n\n\n\n\n\nCode\n    harita &lt;- leaflet(istanbul_coordinates) %&gt;%\n      addTiles() %&gt;%\n      addCircleMarkers(\n        lng = ~longitude,\n        lat = ~latitude,\n        radius = istanbul_df$X2019.yılı.nüfusları/50000,\n        color = ~color,\n        fillOpacity = 0.65,\n        popup = ~paste(ilceler, \": \", danger_level)\n      )\n\n    harita\n\n\n\n\n\n\n\nNow, you can see what we have done so far on the real map. Focus on colors and size of the nodes. Here we can see that south part of the İstanbul is going to get the highest damage. Hence, we do not recommend you to be in İstanbul unless there is an urgency. And if you do, stay away from the south and try to be around the green nodes.\n\n\n\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nplot1 &lt;- ggplot(istanbul_df, aes(x = cok_agir_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(cok_agir_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, cok_agir_hasarli_bina_sayisi)), \n            hjust = 0, vjust = -2.5, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Severely Damaged Buildings\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot2 &lt;- ggplot(istanbul_df, aes(x = agir_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(agir_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, agir_hasarli_bina_sayisi)), \n            hjust = 0, vjust = -1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Heavy Damaged Building\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot3 &lt;- ggplot(istanbul_df, aes(x = orta_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(orta_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, orta_hasarli_bina_sayisi)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Moderately Damaged Building\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nplot4 &lt;- ggplot(istanbul_df, aes(x = hafif_hasarli_bina_sayisi)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"purple\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"purple\") +\n  geom_text(aes(x = min(hafif_hasarli_bina_sayisi), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, hafif_hasarli_bina_sayisi)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Slightly Damaged Buildings\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(plot1, plot2, plot3, plot4,ncol=2)\n\n\n\n\n\n\nWe also mentioned that average health and average building plots look similar. Nearly around each district we see the pick values. So, we decided to look for the correlation levels of these two variables.\nHere our dependent variable is deaths and independent variables are types of damaged buildings. Correlation levels can also been. Here we can understand the relation between damaged building and deaths.\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nbina_yası_plot1 &lt;- ggplot(istanbul_df, aes(x = once_1980)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(once_1980), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, once_1980)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings Before 1980\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nbina_yası_plot2 &lt;- ggplot(istanbul_df, aes(x = ara_1980_2000)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(ara_1980_2000), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_1980_2000)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings Between 1980-2000\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nbina_yası_plot3 &lt;- ggplot(istanbul_df, aes(x = sonra_2000)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(sonra_2000), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, sonra_2000)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings After 2000\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(bina_yası_plot1, bina_yası_plot2, bina_yası_plot3, ncol = 2)\n\n\n\n\n\n\nIn the above plots we are able to see correlations between ages of buildings and loss of life.\nRecognize that buildings constructed before 1980 have the highest correlation level. That means, old constructions have bigger impact on the loss of lives. When constructions get newer correlation levels decreasing. Hence, we can understand that latest constructions are safer than the previous ones.\n\n\n\n\n\n\nCode\n    cor_func &lt;- function(x, y) {\n  cor_coef &lt;- cor(x, y)\n  cor_label &lt;- paste(\"Correlation:\", round(cor_coef, 3))\n  return(cor_label)\n}\n\nkat_sayisi_plot1 &lt;- ggplot(istanbul_df, aes(x = ara_1_4_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"blue\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"blue\") +\n  geom_text(aes(x = min(ara_1_4_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_1_4_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 1 to 4 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nkat_sayisi_plot2 &lt;- ggplot(istanbul_df, aes(x = ara_5_9_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"red\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"red\") +\n  geom_text(aes(x = min(ara_5_9_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_5_9_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 5 to 9 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\nkat_sayisi_plot3 &lt;- ggplot(istanbul_df, aes(x = ara_9_19_kat)) +\n  geom_point(aes(y = can_kaybi_sayisi), color = \"green\") +\n  geom_smooth(aes(y = can_kaybi_sayisi), method = \"lm\", se = TRUE, color = \"green\") +\n  geom_text(aes(x = min(ara_9_19_kat), y = max(can_kaybi_sayisi), label = cor_func(can_kaybi_sayisi, ara_9_19_kat)), \n            hjust = 0, vjust = 1, color = \"black\") +\n  theme_minimal() +\n  facet_wrap(~\"Buildings with 9 to 19 Storeys\", scales = \"free\") +\n  ylab(\"\") + xlab(\"\")\n\ngrid.arrange(kat_sayisi_plot1, kat_sayisi_plot2, kat_sayisi_plot3, ncol = 2)\n\n\n\n\n\n\nWe also applied same approach to building storeys.\nHere we understand that buildings with 1 to 4 storeys are much safer than the buildings with 5 to 9 storeys since they have negative correlation with loss of life.\nAlso, when we look at the correlation plot for buildings with 9 and above storeys, they also look safe. However, this result might be biased due to lack of information on these buildings.\n\n\n\n\n\n\n\n\nFinally, we put our data into regression model to see which variable have importance on loss of live. As you guess, our dependent variable is loss of life. All other variables such as storey informations, age information etc. are our independent variables.\nThe model itself returns us which of the variables are more significant on the dependent varaibles. Model indicates these variables with *** at the end of the row. These are significant according to model because their p values are less than 0.05.\nEstimate values are describe how much dependent variable change when 1 unit increase occur on related independent variables.\nFor instance, if severely damaged building increases by one, about 43 more people would also die. Interestengly, waste water pipe damages are also significant for the model and influence the loss of life. 1 unit of pipe damage increases the number of people died by 6.\n\n\n\nCode\ndependent_variable &lt;- reg_df$can_kaybi_sayisi\nindependent_variables &lt;- reg_df[, c(\n  \"cok_agir_hasarli_bina_sayisi\",\n  \"agir_hasarli_bina_sayisi\",\n  \"orta_hasarli_bina_sayisi\",\n  \"hafif_hasarli_bina_sayisi\",\n  \"dogalgaz_boru_hasari\",\n  \"icme_suyu_boru_hasari\",\n  \"atik_su_boru_hasari\",\n  \"once_1980\",\n  \"ara_1980_2000\",\n  \"sonra_2000\",\n  \"ara_1_4_kat\",\n  \"ara_5_9_kat\",\n  \"ara_9_19_kat\"\n)]\n\nstandardize &lt;- function(x) {\n  return((x - mean(x)) / sd(x))\n}\n\nscaled_independent_variables &lt;- as.data.frame(lapply(independent_variables, standardize))\n\nscaled_regression_model &lt;- lm(dependent_variable ~ ., data = scaled_independent_variables)\n\nsummary(scaled_regression_model)\n\n\n\nCall:\nlm(formula = dependent_variable ~ ., data = scaled_independent_variables)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-55.137  -4.937  -0.133   3.729  80.867 \n\nCoefficients: (1 not defined because of singularities)\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   14.7497     0.3723  39.619  &lt; 2e-16 ***\ncok_agir_hasarli_bina_sayisi  42.8283     1.9148  22.367  &lt; 2e-16 ***\nagir_hasarli_bina_sayisi     -60.5864     4.6481 -13.035  &lt; 2e-16 ***\norta_hasarli_bina_sayisi      48.3867     5.6024   8.637  &lt; 2e-16 ***\nhafif_hasarli_bina_sayisi     -7.3059     4.1575  -1.757 0.079191 .  \ndogalgaz_boru_hasari           0.8949     0.7459   1.200 0.230507    \nicme_suyu_boru_hasari          0.5104     0.8291   0.616 0.538297    \natik_su_boru_hasari            6.4169     0.8359   7.676 4.07e-14 ***\nonce_1980                      1.2912     2.0357   0.634 0.526049    \nara_1980_2000                  6.1606     3.5634   1.729 0.084161 .  \nsonra_2000                     2.4245     2.4252   1.000 0.317712    \nara_1_4_kat                  -14.8254     4.2357  -3.500 0.000487 ***\nara_5_9_kat                   -1.7927     2.3339  -0.768 0.442619    \nara_9_19_kat                       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.53 on 946 degrees of freedom\nMultiple R-squared:  0.8422,    Adjusted R-squared:  0.8402 \nF-statistic: 420.7 on 12 and 946 DF,  p-value: &lt; 2.2e-16"
  }
]